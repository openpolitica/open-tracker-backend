{
  "openapi": "3.0.0",
  "info": {
    "title": "Open Politica - Congreso - API",
    "version": "0.1.0",
    "description": "API para proyecto Congreso desarrollado para backend de Open Politica in Node.JS",
    "license": {
      "name": "Apache 2.0",
      "url": "https://spdx.org/licenses/Apache-2.0.html"
    },
    "contact": {
      "name": "OpenPolitica",
      "url": "https://openpolitica.com",
      "email": "hola@openpolitica.com"
    }
  },
  "servers": [
    {
      "url": "https://api.congreso.openpolitica.com",
      "description": "Production Server"
    },
    {
      "url": "https://api.dev.congreso.openpolitica.com",
      "description": "Staging Server"
    },
    { "url": "http://localhost:8000", "description": "Development Server" }
  ],
  "tags": [
    {
      "name": "Congressperson",
      "description": "Endpoints to retrieve information about congressperson"
    },
    {
      "name": "Location",
      "description": "Endpoints to retrieve information about location"
    },
    {
      "name": "Bill",
      "description": "Endpoints to retrieve information about bill"
    },
    {
      "name": "BillStatus",
      "description": "Endpoints to retrieve information about bill-status"
    },
    {
      "name": "Legislature",
      "description": "Endpoints to retrieve information about legislature"
    },
    {
      "name": "Committee",
      "description": "Endpoints to retrieve information about committee"
    },
    {
      "name": "Parliamentary group",
      "description": "Endpoints to retrieve information about parliamentary group"
    },
    {
      "name": "Search",
      "description": "Endpoints to search in database"
    },
    {
      "name": "Glossary",
      "description": "Endpoints to retrieve glossary entries in database"
    }
  ],
  "paths": {
    "/api/congressperson": {
      "get": {
        "tags": ["Congressperson"],
        "summary": "Returns information about congresspeople. If a query parameter is not defined, returns the complete list of congresspeople. Otherwise return the information about a specific congressperson. Accepts 'id_dni' as a parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "id_dni",
            "description": "Identificator of a specific congressperson through the id_dni value",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/congressperson/{slug}": {
      "get": {
        "tags": ["Congressperson"],
        "summary": "Returns information about a specific congressperson using the slug value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific congressperson.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/congressperson/{id}": {
      "get": {
        "tags": ["Congressperson"],
        "summary": "Returns information about a specific congressperson using the id value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Number identificator of a specific congressperson.",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/congressperson/{slug}/bills": {
      "get": {
        "tags": ["Congressperson"],
        "summary": "Returns the complete list of bills related to a specific congressperson using the slug value as identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific congressperson.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "Size of the page",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Number of the page to retrieve. Starts at 0",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "legislatureOrder",
            "description": "Number indicator for a specific legislature.",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/congressperson/{id}/bills": {
      "get": {
        "tags": ["Congressperson"],
        "summary": "Returns the complete list of bills related to a specific congressperson using the id value as identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Number identificator of a specific congressperson.",
            "schema": {
              "type": "integer"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "Size of the page",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Number of the page to retrieve. Starts at 0",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "legislatureOrder",
            "description": "Number indicator for a specific legislature.",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/location": {
      "get": {
        "tags": ["Location"],
        "summary": "Returns information about location. If a query parameter is not defined, returns the complete list of locations. Otherwise return the information about a specific location. Accepts 'ubigeo' as a parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "ubigeo",
            "description": "Identificator of a specific location through the ubigeo value",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/location/{slug}": {
      "get": {
        "tags": ["Location"],
        "summary": "Returns information about a specific location using the slug value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]|[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific location.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/location/{id}": {
      "get": {
        "tags": ["Location"],
        "summary": "Returns information about a specific location using the id value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Number identificator of a specific location.",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/parliamentary-group": {
      "get": {
        "tags": ["Parliamentary group"],
        "summary": "Returns information about parliamentary groups. If a query parameter is not defined, returns the complete list of parliamentary groups. Otherwise return the information about a specific parliamentary group. Accepts 'parliamentary_group_name' as a parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "parliamentary_group_name",
            "description": "Name of a specific parliamentary group through the parliamentary_group_name value",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/parliamentary-group/{slug}": {
      "get": {
        "tags": ["Parliamentary group"],
        "summary": "Returns information about a specific parliamentary group using the slug value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific parliamentary group.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/parliamentary-group/{id}": {
      "get": {
        "tags": ["Parliamentary group"],
        "summary": "Returns information about a specific parliamentary group using the id value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
            "description": "Unique identificator (UUID) of a specific parliamentary group.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/committee": {
      "get": {
        "tags": ["Committee"],
        "summary": "Returns information about committee. If a query parameter is not defined, returns the complete list of committees. Otherwise return the information about a specific committee. Accepts 'committee_name' as a parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "committee_name",
            "description": "Name of a specific committee through the committee_name value",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/committee/{slug}": {
      "get": {
        "tags": ["Committee"],
        "summary": "Returns information about a specific committee using the slug value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific committee.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/committee/{id}": {
      "get": {
        "tags": ["Committee"],
        "summary": "Returns information about a specific committee using the id value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "pattern": "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}",
            "description": "Unique identificator (UUID) of a specific committee.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/bill-status": {
      "get": {
        "tags": ["BillStatus"],
        "summary": "Returns information about bill status. If a query parameter is not defined, returns the complete list of bill status. Otherwise return the information about a specific bill status. Accepts 'slug' as a parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "description": "Slug for a specific bill status",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/bill-status/{slug}": {
      "get": {
        "tags": ["BillStatus"],
        "summary": "Returns information about a specific bill status using the slug value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]|[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific location.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/bill-status/{id}": {
      "get": {
        "tags": ["BillStatus"],
        "summary": "Returns information about a specific bill status using the id value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Number identificator of a specific location.",
            "schema": {
              "type": "integer"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/legislature": {
      "get": {
        "tags": ["Legislature"],
        "summary": "Returns information about legislature. If a query parameter is not defined, returns the complete list of legislature. Otherwise return the information about a specific legislature. Accepts 'slug' as a parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "description": "Slug for a specific legislature",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/legislature/{slug}": {
      "get": {
        "tags": ["Legislature"],
        "summary": "Returns information about a specific legislature using the slug value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]|[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific legislature.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/legislature/{id}": {
      "get": {
        "tags": ["Legislature"],
        "summary": "Returns information about a specific legislature using the id value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Number identificator of a specific location.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/bill": {
      "get": {
        "tags": ["Bill"],
        "summary": "Returns the complete list of committees.",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "query",
            "name": "author",
            "description": "Search bills with a specific author",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "pageSize",
            "description": "Size of the page",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "page",
            "description": "Number of the page to retrieve. Starts at 0",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "legislature",
            "description": "Legislature order number",
            "schema": {
              "type": "integer"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "billStatus",
            "description": "Slug for the bill status",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "committee",
            "description": "Slug for the committee",
            "schema": {
              "type": "string"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "date",
            "description": "Presentation's date of the bill",
            "schema": {
              "type": "string"
            },
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/bill/{id}": {
      "get": {
        "tags": ["Bill"],
        "summary": "Returns information about a specific bill using the id value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "pattern": "[0-9]{4}-[0-9]{4}-[0-9]{5}",
            "description": "ID identificator of a specific bill.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/search": {
      "get": {
        "tags": ["Search"],
        "summary": "Search for a word in multiple tables using 'query' as the word to search on the database. Use the 'limit' query parameter to limit the number of results on the search, if not provided uses 3 as default.",
        "parameters": [
          {
            "in": "query",
            "name": "query",
            "description": "String used to search on the database.",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "in": "query",
            "name": "limit",
            "description": "Limit of results obtained for each table search.",
            "schema": {
              "type": "integer"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/glossary/term": {
      "get": {
        "tags": ["Glossary"],
        "summary": "Returns information about glossary terms. If a query parameter is not defined, returns the complete list of terms. Otherwise return the information about a specific term. Accepts 'slug' as a parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "description": "Identificator of a specific glossary term through its slug",
            "schema": {
              "type": "text"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/glossary/term/{slug}": {
      "get": {
        "tags": ["Glossary"],
        "summary": "Returns information about a specific glossary term using the slug value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]|[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific glossary term.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/glossary/category": {
      "get": {
        "tags": ["Glossary"],
        "summary": "Returns information about glossary categories. If a query parameter is not defined, returns the complete list of categories. Otherwise return the information about a specific categories. Accepts 'slug' as a parameter.",
        "parameters": [
          {
            "in": "query",
            "name": "slug",
            "description": "Identificator of a specific glossary category through its slug",
            "schema": {
              "type": "text"
            },
            "required": false
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },

    "/api/glossary/category/{slug}": {
      "get": {
        "tags": ["Glossary"],
        "summary": "Returns information about a specific glossary category using the slug value as the identificator.",
        "parameters": [
          {
            "in": "path",
            "name": "slug",
            "pattern": "[a-z]|[a-z]+(?:-[a-z-]+)*",
            "description": "URL-friendly name identificator of a specific glossary category.",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  }
}
